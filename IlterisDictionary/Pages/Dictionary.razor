@page "/dictionary"
@using IlterisDictionary.ViewModels


<PageTitle>Search Dictionary</PageTitle>

<h1>Dictionary</h1>
<div>
    <input type="text" @bind="@_currentString" />
    <button @onclick=LoadDictionaryEntries>Search</button>
</div>

<hr />

<table border="1" class="table-bordered" width="100%">
    <thead>
        <tr>
            <th width="14%">Proto-Turkic root</th>
            <th width="14%">Turkish variant</th>
            <th width="14%">Loanword</th>
            <th width="14%">Meaning</th>
            <th width="14%">further reading</th>
            <th width="14%">other variants</th>
            <th width="14%">related to</th>
        </tr>
    </thead>

    <tbody>

        @foreach (var @row in @_dictionaryEntries)
        {
            <tr>
                <td>@row.ProtoTurkicRoot</td>
                <td>@row.TurkishVariant</td>
                <td>@row.Loanwords</td>
                <td>
                    <div>
                        <a href="@GetMeaningLink(@row)">Show</a>
                    </div>
                </td>
                <td>@row.FurtherReadings</td>
                <td>@row.OtherVariants</td>
                <td>@row.RelatedTo</td>
            </tr>
        }

    </tbody>
</table>


@code
{
    private string _currentString = string.Empty;

    const string _meaningPageName = "meanings";

    private List<IlterisDictionaryEntryVm> _dictionaryEntries = new List<IlterisDictionaryEntryVm>();

    private void LoadDictionaryEntries()
    {
        _dictionaryEntries.Clear();
        for (int i = 0; i < 100; i++)
        {
            var array = new[] { $"{i}" };
            var item = new IlterisDictionaryEntryVm(
    protoTurkicRoot: array,
    turkishVariant: array,
    furtherReading: array,
    loanwords: array,
    meaning: $"{i}",
    otherVariants: array,
    furtherReadings: array,
    relatedTo: array);
            _dictionaryEntries.Add(item);
        }
    }


    private string GetMeaningLink(IlterisDictionaryEntryVm entry)
    {
        return $"{_meaningPageName}#{entry.EntryId.ToString()}";
    }
}